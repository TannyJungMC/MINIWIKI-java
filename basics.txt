Start

    public class #FileName {
        public static void main(String[] args) {
            #Code
        }
    }

Comments
    
    Single Line
        // This is how to use

    Multiple Lines
        /*
        1
        2
        3
        */

Print Message
    
    System.out.println("Hello World");
    System.out.println(c+a);
    System.out.println("You Score = "+score+"/1,000");
    
    Tab = \t
    New Line = \n

Variable

    Integer // 1, 2, 3
        
        byte
        short
        int

            int a;
            int a=1;
            int UNCHANGE=2;

        long

    Floating-Point // 15.52367, 3.14, ..

        Floating
        double

    Character // a, b, c, ...

        char

    Boolean // true/false

        boolean

    Array // room with people, or team.

        int number[] = {"1","2"};

        String team[0] = "John";
        String team[1] = {a1,a2,a3};

        ###.length // Get count inside that array

        Print all players in the team

            for(int player=0;player<team.length;player++){
            System.out.println(team[player]);
            }

        Array inside array

            [horizontal][verticle]

            String test [][] = {
                {"A","B"},
                {"1","2"}
            }

    Variable Arguments

        public static void summation(int...number){
            int sum = 0;
            for(int a;a<number.length;a++){
                sum = sum + number[a];
            }
        }

Convert Variable

    a=Integer.parseInt(b);
    a=String.valeOf(b);

Input Data

    import java.util.Scanner;

    public class Input {
        public static void main(String[] args) {

            System.out.println("Name1");
            Scanner a=new Scanner(System.in);
            String name1=a.nextLine();
            System.out.println(name1);
        }
    }

Math & Logic

    + - * / %

        % = เอาเศษที่เหลือจากการหาร

    == != < > <= >=

    && = AND
    || = OR
    ! = NOT

        !(a=b)

    System.out.println((a==b) && (c==d));

    Pre & Post

        a++ a+=5

        a = 1
        ++a = 2
        a = 2

        a = 1
        a++ = 1
        a = 2
    
    Random a number

        Mth.nextInt(RandomSource.create(), 1, 100)

Control Structure

    Sequence (ลำดับ)

    Condition (มีเงื่อนไข)

        if

            if(a>b){
                ###
            }
        
        if else

            if(a>b){
                ###
            }
            else{
                ###
            }

        if if // Run all

            if(a>b){
                ###
            }
            if{
                ###
            }

        if if // if outside is true, run if inside.

            if(a>b){
                if(b>c){
                ###
                }
            }

        if elseif else // Run single

            if(a>b){
                ###
            }
            elseif{
                ###
            }
            else{
                ###
            }

    Switch..Case

        Switch(id){
            case "cat":
                System.out.println("This is a cat")
                break;
            case "dog":
                System.out.println("This is a dog")
                break;
            default:
                System.out.println("This is a cat and a dog")
                break;
        }

    Loop (ทำซ้ำ)

        break = okay close it
            
            if(###){
                break;
            }

            if(###)break:

        continue = skip this loop to next loop, if x%2=0 run continue, you will get 1, 3, 5, ...

        While

            while(a>b){
                ###
            }

        For // Work like repeat

            for (int a=0,a<10,a++){
                ###
            }

        Do..While // Do 1 time and test, if true, go back to run again.

            do{
                ###
            }while(###)


        Basic loop with count
        
            for (int loop = 0; index0 < 100; index0++) {
                XXX
            }

Method // Like procedure in MCreator

    Basic call procedure without return (using "void" instead of data type)

        static void say_this(){
            System.out.println("Okay Kha!");
        }

        say_this();

        static void say_this(String id , String name){
            System.out.println(id);
            System.out.println(name);
        }

        say_this("cat","Betty");

    Call procedure with return

        static String getIP(){
            return "1234567890";
        }

        String myIP=getIP();

        "return" also work like "break" that cancel process and jump back

Character Method

    Checking the text

        ###.isLetter(###) // Alphabet
        ###.isDigit(###) // Number
        ###.isUpperCase(###)
        ###.isLowwerCase(###)

    Convert text to upper or lower case

        ###.toUpperCase(###)
        ###.toLowerCase(###)

    Character this_letter = new Character('B');
    Character.toUpperCase(this_letter);

String Method

    String my_name = "TannyJung";

    How length
        
        int result = my_name.length;

    Get letter at that position in string

        char result = my_name.charAt(5);

    Test is 2 strings equal

        boolean result = my_name.equals(your_name);

    Letter at first and end position

        boolean result = my_name.startsWith("Tanny");
        boolean result = my_name.endsWith("Jung");

    Finding word position in string

        System.out.println(my_name.indexOf("Jung"))
        System.out.println(my_name.indexOf(" ")) // You can find space too

    Replace text

        my_name = my_name.replace("Tanny","Natty") // Replace all "Tanny" with "Natty"
        my_name = my_name.replaceFirst("Tanny","Natty") // Replace first found "Tanny" with "Natty"
    
    Split text

        String data = "A/B/C";
        String [] choose = data.split("/");
        System.out.println(choose[2]);

    Get sub string

        my_name.subString(0,3)

    Convert string to characters (using array)

        String my_name = "tan";
        char name_array [] = my_name.toCharArray()
        System.out.println(name_array[0])

    Convert characters to string

        char [] my_name = {'t','a','n'};
        System.out.println(String.copyValueOf(my_name))

    Trim

        my_name = my_name.trim();

    Convert text between lower and upper case

        my_name = my_name.toUpperCase();
        my_name = my_name.toLowerCase();

    Convert number to string

        int number = 100;
        String result = String.valueOf(number);

Exception

    Try...Catch // If found error

        try {
            ###
        } catch (ArithmethicException ###) {
            System.out.println("Error! Try other number that not A/0")
        }

    Finally // I always work, even when you found error... like game save system that can run when game crash?

        try {
            ###
        } catch {
            ###
        } finally {
            ###
        }

    Throw // Custom exception

        throw new Exception("You can't use number lower than 0");

        try {
            if (number<0) {
                throw new Exception("You can't use number lower than 0");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

File Manage

    Create a TXT file (basic)

        try {
            FileWriter writer = new FileWriter(new File("Test.txt"));

            writer.write("-----------------------\n");
            writer.write("ABCDEFG\n");
            writer.write("-----------------------");

            writer.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    Read a TXT file (basic) // Can read letter by letter using "printf"

        try {
            FileReader reader = new FileReader(new File("Test.txt"));
            int data;
            while ((data = reader.read()) !=-1) {
                System.out.printf("%c\n",data);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    Create a TXT file (buffered)

        try {
            FileWriter writer = new FileWriter(new File("Test.txt"));
            BufferedWriter bw = new BufferedWriter(writer);

            bw.write("A\n");
            bw.write("B\n");
            bw.write("C");

            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    Read a TXT file (buffered) // Can read line by line using "println"

        try {
            FileReader reader = new FileReader(new File("Test.txt"));
            BufferedReader br = new BufferedReader(reader);
            String data = "";

            while ((data = br.readLine()) !=null) {
                System.out.println(data);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    Send files name in a folder

        File folder = new File(" # folder_name # ");
        File[] listOfFiles = folder.listFiles();
        
        if (listOfFiles != null) {
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()) {
                    System.out.println("File : " + listOfFiles[i].getName());
			    } else if (listOfFiles[i].isDirectory()) {
                    System.out.println("Directory : " + listOfFiles[i].getName());
                }
            }
        }

    Rename a file
    
        File file = new File("C:/Users/Kwanc/Tan/Mod Projects/THT/run/config/THT/generated/A.txt"); 
        File rename = new File("C:/Users/Kwanc/Tan/Mod Projects/THT/run/config/THT/generated/B.txt");
        boolean flag = file.renameTo(rename);
